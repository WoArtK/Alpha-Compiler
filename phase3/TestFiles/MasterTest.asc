/* myTest.asc */


/* * * * * * * * * *
 * Simple Commands
 * * * * * * * * * */

 
/* Check Assignments */
globalVariable = 1;
globalVariable = "Hello World";
globalVariable = 1.5;
globalVariable = true;


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* Check local and scopes>0 */
{	// Scope: 1
	notGlobalVariable = false;
	local globalVariable = "Local Variable";
	{	// Scope: 2
		var1 = ::globalVariable;	// Check global call.
		/* Insane scope depth */
		{	{	{	{	{	{	{	{	// Scope: 10
										var2 = ::globalVariable;
		}	}	}	}	}	}	}	}
	}
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


globalVariable = 5;

/* If - Else */
if ( globalVariable < 0 ) {
	globalVariable = 0;
	print( globalVariable );
}
else if ( globalVariable > 0 )
	print( globalVariable );
else
	print( "Zero" );


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* Binary Operands */
booleanVar1 = true;
booleanVar2 = false;
booleanVar3 = true;
booleanVar4 = false;
booleanVar5 = true;
booleanVar6 = false;

booleanVar = (booleanVar1 and booleanVar2 and not booleanVar3) or not (booleanVar4 or booleanVar5 or booleanVar6);


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* Arithmetic Operations */
intVar1		= 10;
floatVar1	= 2.5;
stringVar1	= "Hello World";

intVar1 = -(floatVar1) + 15 - 1 * 2 / (4 - floatVar1);


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* * * * * * *
 * Functions
 * * * * * * */

/* Functions with no parameters */
function f() {	// Function with name.
	// No Code.
}

function() {	// Anonymous function.
	// No Code.
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* Functions with parameters */
function g( x, y ) {	// Function with name.
	// No Code.
}

function( x, y ) {	// Anonymous function.
	// No Code.
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* Nested functions */
function h( x, y ) {	// Function with name.
	function( x, y ) {	// Anonymous function.
		function f( x, y ) {
			// No Code.
		}
	}
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* Nested functions - Function shadowing */
function z( x, y ) {	// Function with name.
	function( x, y ) {	// Anonymous function.
		function f( x, y ) {
			// No Code.
		}
	}
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* Nested functions - Local variables */
function c( x, y ) {	// Function with name.
	localVariable = x;
	local globalVariable = y;	// Not a global variable any more.
	function( x, y ) {	// Anonymous function.
		function f( x, y ) {
			return x - y;
		}
	}
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* Function calls */
f();
g(globalVariable);
h(1, 2);


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* Tables and Objects */
tableVar = [x, y];