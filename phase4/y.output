Grammar

    0 $accept: program $end

    1 program: stmt program
    2        | %empty

    3 $@1: %empty

    4 stmt: expr $@1 ';'
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BREAK ';'
   10     | CONTINUE ';'
   11     | block
   12     | funcdef
   13     | ';'

   14 expr: assignexpr
   15     | expr '+' expr
   16     | expr '-' expr
   17     | expr '*' expr
   18     | expr '/' expr
   19     | expr '%' expr
   20     | expr '>' expr
   21     | expr GREATER_EQUAL expr
   22     | expr '<' expr
   23     | expr LESS_EQUAL expr
   24     | expr EQUALS expr
   25     | expr NOT_EQUALS expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: '(' expr ')'
   30     | '-' expr
   31     | NOT expr
   32     | PLUS_PLUS lvalue

   33 $@2: %empty

   34 term: lvalue $@2 PLUS_PLUS
   35     | MINUS_MINUS lvalue

   36 $@3: %empty

   37 term: lvalue $@3 MINUS_MINUS
   38     | primary

   39 $@4: %empty

   40 assignexpr: lvalue $@4 '=' expr

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | '(' funcdef ')'
   45        | const

   46 lvalue: ID
   47       | GLOB ID
   48       | LOCAL ID
   49       | member

   50 member: lvalue '.' ID
   51       | lvalue '[' expr ']'
   52       | call '.' ID
   53       | call '[' expr ']'

   54 call: call '(' elist ')'
   55     | lvalue callsuffix
   56     | '(' funcdef ')' '(' elist ')'

   57 callsuffix: normcall
   58           | methodcall

   59 normcall: '(' elist ')'

   60 methodcall: DOUBLE_DOT ID '(' elist ')'

   61 elist: expr
   62      | elist ',' expr
   63      | %empty

   64 objectdef: '[' elist ']'
   65          | '[' indexed ']'

   66 indexed: indexedelem
   67        | indexed ',' indexedelem

   68 indexedelem: '{' expr ':' expr '}'

   69 temp_st: temp_st stmt
   70        | %empty

   71 $@5: %empty

   72 $@6: %empty

   73 block: '{' $@5 temp_st '}' $@6

   74 $@7: %empty

   75 $@8: %empty

   76 funcdef: FUNCTION ID $@7 '(' $@8 idlist ')' block

   77 $@9: %empty

   78 $@10: %empty

   79 funcdef: FUNCTION $@9 '(' $@10 idlist ')' block

   80 const: INTEGER
   81      | REALNUMBER
   82      | STRING
   83      | NIL
   84      | TRUE
   85      | FALSE

   86 idlist: ID
   87       | idlist ',' ID
   88       | %empty

   89 $@11: %empty

   90 ifstmt: IF '(' expr ')' $@11 stmt

   91 $@12: %empty

   92 $@13: %empty

   93 ifstmt: $@12 ELSE $@13 stmt

   94 $@14: %empty

   95 $@15: %empty

   96 $@16: %empty

   97 whilestmt: WHILE $@14 '(' $@15 expr ')' $@16 stmt

   98 N: %empty

   99 M: %empty

  100 $@17: %empty

  101 $@18: %empty

  102 forp: FOR '(' $@17 elist ';' M expr ';' $@18

  103 $@19: %empty

  104 $@20: %empty

  105 forstmt: forp N $@19 elist ')' $@20 N stmt N

  106 returnstmt: RETURN ';'
  107           | RETURN expr ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 19
'(' (40) 29 44 54 56 59 60 76 79 90 97 102
')' (41) 29 44 54 56 59 60 76 79 90 97 105
'*' (42) 17
'+' (43) 15
',' (44) 62 67 87
'-' (45) 16 30
'.' (46) 50 52
'/' (47) 18
':' (58) 68
';' (59) 4 9 10 13 102 106 107
'<' (60) 22
'=' (61) 40
'>' (62) 20
'[' (91) 51 53 64 65
']' (93) 51 53 64 65
'{' (123) 68 73
'}' (125) 68 73
error (256)
WHILE (258) 97
FOR (259) 102
BREAK (260) 9
CONTINUE (261) 10
IF (262) 90
ELSE (263) 93
FUNCTION (264) 76 79
RETURN (265) 106 107
AND (266) 26
OR (267) 27
NOT (268) 31
LOCAL (269) 48
TRUE (270) 84
FALSE (271) 85
NIL (272) 83
EQUALS (273) 24
NOT_EQUALS (274) 25
PLUS_PLUS (275) 32 34
MINUS_MINUS (276) 35 37
ID (277) 46 47 48 50 52 60 76 86 87
INTEGER (278) 80
STRING (279) 82
REALNUMBER (280) 81
GREATER_EQUAL (281) 21
LESS_EQUAL (282) 23
DOUBLE_DOT (283) 60
GLOB (284) 47


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1 2, on right: 0 1
stmt (50)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 1 69 90 93 97 105
$@1 (51)
    on left: 3, on right: 4
expr (52)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 40 51 53 61 62
    68 90 97 102 107
term (53)
    on left: 29 30 31 32 34 35 37 38, on right: 28
$@2 (54)
    on left: 33, on right: 34
$@3 (55)
    on left: 36, on right: 37
assignexpr (56)
    on left: 40, on right: 14
$@4 (57)
    on left: 39, on right: 40
primary (58)
    on left: 41 42 43 44 45, on right: 38
lvalue (59)
    on left: 46 47 48 49, on right: 32 34 35 37 40 41 50 51 55
member (60)
    on left: 50 51 52 53, on right: 49
call (61)
    on left: 54 55 56, on right: 42 52 53 54
callsuffix (62)
    on left: 57 58, on right: 55
normcall (63)
    on left: 59, on right: 57
methodcall (64)
    on left: 60, on right: 58
elist (65)
    on left: 61 62 63, on right: 54 56 59 60 62 64 102 105
objectdef (66)
    on left: 64 65, on right: 43
indexed (67)
    on left: 66 67, on right: 65 67
indexedelem (68)
    on left: 68, on right: 66 67
temp_st (69)
    on left: 69 70, on right: 69 73
block (70)
    on left: 73, on right: 11 76 79
$@5 (71)
    on left: 71, on right: 73
$@6 (72)
    on left: 72, on right: 73
funcdef (73)
    on left: 76 79, on right: 12 44 56
$@7 (74)
    on left: 74, on right: 76
$@8 (75)
    on left: 75, on right: 76
$@9 (76)
    on left: 77, on right: 79
$@10 (77)
    on left: 78, on right: 79
const (78)
    on left: 80 81 82 83 84 85, on right: 45
idlist (79)
    on left: 86 87 88, on right: 76 79 87
ifstmt (80)
    on left: 90 93, on right: 5
$@11 (81)
    on left: 89, on right: 90
$@12 (82)
    on left: 91, on right: 93
$@13 (83)
    on left: 92, on right: 93
whilestmt (84)
    on left: 97, on right: 6
$@14 (85)
    on left: 94, on right: 97
$@15 (86)
    on left: 95, on right: 97
$@16 (87)
    on left: 96, on right: 97
N (88)
    on left: 98, on right: 105
M (89)
    on left: 99, on right: 102
forp (90)
    on left: 102, on right: 105
$@17 (91)
    on left: 100, on right: 102
$@18 (92)
    on left: 101, on right: 102
forstmt (93)
    on left: 105, on right: 7
$@19 (94)
    on left: 103, on right: 105
$@20 (95)
    on left: 104, on right: 105
returnstmt (96)
    on left: 106 107, on right: 8


State 0

    0 $accept: . program $end

    WHILE        shift, and go to state 1
    FOR          shift, and go to state 2
    BREAK        shift, and go to state 3
    CONTINUE     shift, and go to state 4
    IF           shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    ';'          shift, and go to state 21
    '{'          shift, and go to state 22
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    ELSE      reduce using rule 91 ($@12)
    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    $@12        go to state 39
    whilestmt   go to state 40
    forp        go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 1

   97 whilestmt: WHILE . $@14 '(' $@15 expr ')' $@16 stmt

    $default  reduce using rule 94 ($@14)

    $@14  go to state 44


State 2

  102 forp: FOR . '(' $@17 elist ';' M expr ';' $@18

    '('  shift, and go to state 45


State 3

    9 stmt: BREAK . ';'

    ';'  shift, and go to state 46


State 4

   10 stmt: CONTINUE . ';'

    ';'  shift, and go to state 47


State 5

   90 ifstmt: IF . '(' expr ')' $@11 stmt

    '('  shift, and go to state 48


State 6

   76 funcdef: FUNCTION . ID $@7 '(' $@8 idlist ')' block
   79        | FUNCTION . $@9 '(' $@10 idlist ')' block

    ID  shift, and go to state 49

    $default  reduce using rule 77 ($@9)

    $@9  go to state 50


State 7

  106 returnstmt: RETURN . ';'
  107           | RETURN . expr ';'

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    ';'          shift, and go to state 51
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 52
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 8

   31 term: NOT . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 53
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 9

   48 lvalue: LOCAL . ID

    ID  shift, and go to state 54


State 10

   84 const: TRUE .

    $default  reduce using rule 84 (const)


State 11

   85 const: FALSE .

    $default  reduce using rule 85 (const)


State 12

   83 const: NIL .

    $default  reduce using rule 83 (const)


State 13

   30 term: '-' . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 55
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 14

   32 term: PLUS_PLUS . lvalue

    LOCAL  shift, and go to state 9
    ID     shift, and go to state 16
    '('    shift, and go to state 56
    GLOB   shift, and go to state 24

    lvalue  go to state 57
    member  go to state 32
    call    go to state 58


State 15

   35 term: MINUS_MINUS . lvalue

    LOCAL  shift, and go to state 9
    ID     shift, and go to state 16
    '('    shift, and go to state 56
    GLOB   shift, and go to state 24

    lvalue  go to state 59
    member  go to state 32
    call    go to state 58


State 16

   46 lvalue: ID .

    $default  reduce using rule 46 (lvalue)


State 17

   80 const: INTEGER .

    $default  reduce using rule 80 (const)


State 18

   82 const: STRING .

    $default  reduce using rule 82 (const)


State 19

   81 const: REALNUMBER .

    $default  reduce using rule 81 (const)


State 20

   64 objectdef: '[' . elist ']'
   65          | '[' . indexed ']'

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '{'          shift, and go to state 60
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr         go to state 61
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 62
    objectdef    go to state 34
    indexed      go to state 63
    indexedelem  go to state 64
    const        go to state 37


State 21

   13 stmt: ';' .

    $default  reduce using rule 13 (stmt)


State 22

   73 block: '{' . $@5 temp_st '}' $@6

    $default  reduce using rule 71 ($@5)

    $@5  go to state 65


State 23

   29 term: '(' . expr ')'
   44 primary: '(' . funcdef ')'
   56 call: '(' . funcdef ')' '(' elist ')'

    FUNCTION     shift, and go to state 6
    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 66
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 67
    const       go to state 37


State 24

   47 lvalue: GLOB . ID

    ID  shift, and go to state 68


State 25

    0 $accept: program . $end

    $end  shift, and go to state 69


State 26

    1 program: stmt . program

    WHILE        shift, and go to state 1
    FOR          shift, and go to state 2
    BREAK        shift, and go to state 3
    CONTINUE     shift, and go to state 4
    IF           shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    ';'          shift, and go to state 21
    '{'          shift, and go to state 22
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    ELSE      reduce using rule 91 ($@12)
    $default  reduce using rule 2 (program)

    program     go to state 70
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    $@12        go to state 39
    whilestmt   go to state 40
    forp        go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 27

    4 stmt: expr . $@1 ';'
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83

    $default  reduce using rule 3 ($@1)

    $@1  go to state 84


State 28

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 29

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 30

   38 term: primary .

    $default  reduce using rule 38 (term)


State 31

   34 term: lvalue . $@2 PLUS_PLUS
   37     | lvalue . $@3 MINUS_MINUS
   40 assignexpr: lvalue . $@4 '=' expr
   41 primary: lvalue .
   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    '['         shift, and go to state 85
    '('         shift, and go to state 86
    '.'         shift, and go to state 87
    DOUBLE_DOT  shift, and go to state 88

    PLUS_PLUS    reduce using rule 33 ($@2)
    MINUS_MINUS  reduce using rule 36 ($@3)
    '='          reduce using rule 39 ($@4)
    $default     reduce using rule 41 (primary)

    $@2         go to state 89
    $@3         go to state 90
    $@4         go to state 91
    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 32

   49 lvalue: member .

    $default  reduce using rule 49 (lvalue)


State 33

   42 primary: call .
   52 member: call . '.' ID
   53       | call . '[' expr ']'
   54 call: call . '(' elist ')'

    '['  shift, and go to state 95
    '('  shift, and go to state 96
    '.'  shift, and go to state 97

    $default  reduce using rule 42 (primary)


State 34

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


State 35

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 36

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 37

   45 primary: const .

    $default  reduce using rule 45 (primary)


State 38

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 39

   93 ifstmt: $@12 . ELSE $@13 stmt

    ELSE  shift, and go to state 98


State 40

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 41

  105 forstmt: forp . N $@19 elist ')' $@20 N stmt N

    $default  reduce using rule 98 (N)

    N  go to state 99


State 42

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 43

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 44

   97 whilestmt: WHILE $@14 . '(' $@15 expr ')' $@16 stmt

    '('  shift, and go to state 100


State 45

  102 forp: FOR '(' . $@17 elist ';' M expr ';' $@18

    $default  reduce using rule 100 ($@17)

    $@17  go to state 101


State 46

    9 stmt: BREAK ';' .

    $default  reduce using rule 9 (stmt)


State 47

   10 stmt: CONTINUE ';' .

    $default  reduce using rule 10 (stmt)


State 48

   90 ifstmt: IF '(' . expr ')' $@11 stmt

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 102
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 49

   76 funcdef: FUNCTION ID . $@7 '(' $@8 idlist ')' block

    $default  reduce using rule 74 ($@7)

    $@7  go to state 103


State 50

   79 funcdef: FUNCTION $@9 . '(' $@10 idlist ')' block

    '('  shift, and go to state 104


State 51

  106 returnstmt: RETURN ';' .

    $default  reduce using rule 106 (returnstmt)


State 52

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
  107 returnstmt: RETURN expr . ';'

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83
    ';'            shift, and go to state 105


State 53

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   31 term: NOT expr .

    $default  reduce using rule 31 (term)


State 54

   48 lvalue: LOCAL ID .

    $default  reduce using rule 48 (lvalue)


State 55

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   30 term: '-' expr .

    '*'  shift, and go to state 75
    '%'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 30 (term)


State 56

   56 call: '(' . funcdef ')' '(' elist ')'

    FUNCTION  shift, and go to state 6

    funcdef  go to state 106


State 57

   32 term: PLUS_PLUS lvalue .
   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    '['         shift, and go to state 85
    '('         shift, and go to state 86
    '.'         shift, and go to state 87
    DOUBLE_DOT  shift, and go to state 88

    $default  reduce using rule 32 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 58

   52 member: call . '.' ID
   53       | call . '[' expr ']'
   54 call: call . '(' elist ')'

    '['  shift, and go to state 95
    '('  shift, and go to state 96
    '.'  shift, and go to state 97


State 59

   35 term: MINUS_MINUS lvalue .
   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    '['         shift, and go to state 85
    '('         shift, and go to state 86
    '.'         shift, and go to state 87
    DOUBLE_DOT  shift, and go to state 88

    $default  reduce using rule 35 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 60

   68 indexedelem: '{' . expr ':' expr '}'

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 107
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 61

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   61 elist: expr .

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83

    $default  reduce using rule 61 (elist)


State 62

   62 elist: elist . ',' expr
   64 objectdef: '[' elist . ']'

    ']'  shift, and go to state 108
    ','  shift, and go to state 109


State 63

   65 objectdef: '[' indexed . ']'
   67 indexed: indexed . ',' indexedelem

    ']'  shift, and go to state 110
    ','  shift, and go to state 111


State 64

   66 indexed: indexedelem .

    $default  reduce using rule 66 (indexed)


State 65

   73 block: '{' $@5 . temp_st '}' $@6

    $default  reduce using rule 70 (temp_st)

    temp_st  go to state 112


State 66

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   29 term: '(' expr . ')'

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83
    ')'            shift, and go to state 113


State 67

   44 primary: '(' funcdef . ')'
   56 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 114


State 68

   47 lvalue: GLOB ID .

    $default  reduce using rule 47 (lvalue)


State 69

    0 $accept: program $end .

    $default  accept


State 70

    1 program: stmt program .

    $default  reduce using rule 1 (program)


State 71

   26 expr: expr AND . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 115
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 72

   27 expr: expr OR . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 116
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 73

   15 expr: expr '+' . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 117
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 74

   16 expr: expr '-' . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 118
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 75

   17 expr: expr '*' . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 119
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 76

   19 expr: expr '%' . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 120
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 77

   18 expr: expr '/' . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 121
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 78

   24 expr: expr EQUALS . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 79

   25 expr: expr NOT_EQUALS . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 80

   21 expr: expr GREATER_EQUAL . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 81

   23 expr: expr LESS_EQUAL . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 82

   20 expr: expr '>' . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 83

   22 expr: expr '<' . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 127
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 84

    4 stmt: expr $@1 . ';'

    ';'  shift, and go to state 128


State 85

   51 member: lvalue '[' . expr ']'

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 86

   59 normcall: '(' . elist ')'

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 130
    objectdef   go to state 34
    const       go to state 37


State 87

   50 member: lvalue '.' . ID

    ID  shift, and go to state 131


State 88

   60 methodcall: DOUBLE_DOT . ID '(' elist ')'

    ID  shift, and go to state 132


State 89

   34 term: lvalue $@2 . PLUS_PLUS

    PLUS_PLUS  shift, and go to state 133


State 90

   37 term: lvalue $@3 . MINUS_MINUS

    MINUS_MINUS  shift, and go to state 134


State 91

   40 assignexpr: lvalue $@4 . '=' expr

    '='  shift, and go to state 135


State 92

   55 call: lvalue callsuffix .

    $default  reduce using rule 55 (call)


State 93

   57 callsuffix: normcall .

    $default  reduce using rule 57 (callsuffix)


State 94

   58 callsuffix: methodcall .

    $default  reduce using rule 58 (callsuffix)


State 95

   53 member: call '[' . expr ']'

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 136
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 96

   54 call: call '(' . elist ')'

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 137
    objectdef   go to state 34
    const       go to state 37


State 97

   52 member: call '.' . ID

    ID  shift, and go to state 138


State 98

   93 ifstmt: $@12 ELSE . $@13 stmt

    $default  reduce using rule 92 ($@13)

    $@13  go to state 139


State 99

  105 forstmt: forp N . $@19 elist ')' $@20 N stmt N

    $default  reduce using rule 103 ($@19)

    $@19  go to state 140


State 100

   97 whilestmt: WHILE $@14 '(' . $@15 expr ')' $@16 stmt

    $default  reduce using rule 95 ($@15)

    $@15  go to state 141


State 101

  102 forp: FOR '(' $@17 . elist ';' M expr ';' $@18

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 142
    objectdef   go to state 34
    const       go to state 37


State 102

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   90 ifstmt: IF '(' expr . ')' $@11 stmt

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83
    ')'            shift, and go to state 143


State 103

   76 funcdef: FUNCTION ID $@7 . '(' $@8 idlist ')' block

    '('  shift, and go to state 144


State 104

   79 funcdef: FUNCTION $@9 '(' . $@10 idlist ')' block

    $default  reduce using rule 78 ($@10)

    $@10  go to state 145


State 105

  107 returnstmt: RETURN expr ';' .

    $default  reduce using rule 107 (returnstmt)


State 106

   56 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 146


State 107

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   68 indexedelem: '{' expr . ':' expr '}'

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83
    ':'            shift, and go to state 147


State 108

   64 objectdef: '[' elist ']' .

    $default  reduce using rule 64 (objectdef)


State 109

   62 elist: elist ',' . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 148
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 110

   65 objectdef: '[' indexed ']' .

    $default  reduce using rule 65 (objectdef)


State 111

   67 indexed: indexed ',' . indexedelem

    '{'  shift, and go to state 60

    indexedelem  go to state 149


State 112

   69 temp_st: temp_st . stmt
   73 block: '{' $@5 temp_st . '}' $@6

    WHILE        shift, and go to state 1
    FOR          shift, and go to state 2
    BREAK        shift, and go to state 3
    CONTINUE     shift, and go to state 4
    IF           shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    ';'          shift, and go to state 21
    '{'          shift, and go to state 22
    '}'          shift, and go to state 150
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    $default  reduce using rule 91 ($@12)

    stmt        go to state 151
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    $@12        go to state 39
    whilestmt   go to state 40
    forp        go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 113

   29 term: '(' expr ')' .

    $default  reduce using rule 29 (term)


State 114

   44 primary: '(' funcdef ')' .
   56 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 152

    $default  reduce using rule 44 (primary)


State 115

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   26     | expr AND expr .
   27     | expr . OR expr

    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83

    $default  reduce using rule 26 (expr)


State 116

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   27     | expr OR expr .

    AND            shift, and go to state 71
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83

    $default  reduce using rule 27 (expr)


State 117

   15 expr: expr . '+' expr
   15     | expr '+' expr .
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr

    '*'  shift, and go to state 75
    '%'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 15 (expr)


State 118

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   16     | expr '-' expr .
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr

    '*'  shift, and go to state 75
    '%'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 16 (expr)


State 119

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   17     | expr '*' expr .
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 120

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   19     | expr '%' expr .
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 121

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   18     | expr '/' expr .
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 122

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   24     | expr EQUALS expr .
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr

    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83

    EQUALS      error (nonassociative)
    NOT_EQUALS  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 123

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   25     | expr NOT_EQUALS expr .
   26     | expr . AND expr
   27     | expr . OR expr

    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83

    EQUALS      error (nonassociative)
    NOT_EQUALS  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 124

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   21     | expr GREATER_EQUAL expr .
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '%'  shift, and go to state 76
    '/'  shift, and go to state 77

    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    '>'            error (nonassociative)
    '<'            error (nonassociative)

    $default  reduce using rule 21 (expr)


State 125

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   23     | expr LESS_EQUAL expr .
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '%'  shift, and go to state 76
    '/'  shift, and go to state 77

    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    '>'            error (nonassociative)
    '<'            error (nonassociative)

    $default  reduce using rule 23 (expr)


State 126

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   20     | expr '>' expr .
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '%'  shift, and go to state 76
    '/'  shift, and go to state 77

    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    '>'            error (nonassociative)
    '<'            error (nonassociative)

    $default  reduce using rule 20 (expr)


State 127

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   22     | expr '<' expr .
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '%'  shift, and go to state 76
    '/'  shift, and go to state 77

    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    '>'            error (nonassociative)
    '<'            error (nonassociative)

    $default  reduce using rule 22 (expr)


State 128

    4 stmt: expr $@1 ';' .

    $default  reduce using rule 4 (stmt)


State 129

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   51 member: lvalue '[' expr . ']'

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83
    ']'            shift, and go to state 153


State 130

   59 normcall: '(' elist . ')'
   62 elist: elist . ',' expr

    ')'  shift, and go to state 154
    ','  shift, and go to state 109


State 131

   50 member: lvalue '.' ID .

    $default  reduce using rule 50 (member)


State 132

   60 methodcall: DOUBLE_DOT ID . '(' elist ')'

    '('  shift, and go to state 155


State 133

   34 term: lvalue $@2 PLUS_PLUS .

    $default  reduce using rule 34 (term)


State 134

   37 term: lvalue $@3 MINUS_MINUS .

    $default  reduce using rule 37 (term)


State 135

   40 assignexpr: lvalue $@4 '=' . expr

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 156
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 136

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   53 member: call '[' expr . ']'

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83
    ']'            shift, and go to state 157


State 137

   54 call: call '(' elist . ')'
   62 elist: elist . ',' expr

    ')'  shift, and go to state 158
    ','  shift, and go to state 109


State 138

   52 member: call '.' ID .

    $default  reduce using rule 52 (member)


State 139

   93 ifstmt: $@12 ELSE $@13 . stmt

    WHILE        shift, and go to state 1
    FOR          shift, and go to state 2
    BREAK        shift, and go to state 3
    CONTINUE     shift, and go to state 4
    IF           shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    ';'          shift, and go to state 21
    '{'          shift, and go to state 22
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    $default  reduce using rule 91 ($@12)

    stmt        go to state 159
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    $@12        go to state 39
    whilestmt   go to state 40
    forp        go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 140

  105 forstmt: forp N $@19 . elist ')' $@20 N stmt N

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 160
    objectdef   go to state 34
    const       go to state 37


State 141

   97 whilestmt: WHILE $@14 '(' $@15 . expr ')' $@16 stmt

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 161
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 142

   62 elist: elist . ',' expr
  102 forp: FOR '(' $@17 elist . ';' M expr ';' $@18

    ';'  shift, and go to state 162
    ','  shift, and go to state 109


State 143

   90 ifstmt: IF '(' expr ')' . $@11 stmt

    $default  reduce using rule 89 ($@11)

    $@11  go to state 163


State 144

   76 funcdef: FUNCTION ID $@7 '(' . $@8 idlist ')' block

    $default  reduce using rule 75 ($@8)

    $@8  go to state 164


State 145

   79 funcdef: FUNCTION $@9 '(' $@10 . idlist ')' block

    ID  shift, and go to state 165

    $default  reduce using rule 88 (idlist)

    idlist  go to state 166


State 146

   56 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 152


State 147

   68 indexedelem: '{' expr ':' . expr '}'

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 167
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 148

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   62 elist: elist ',' expr .

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83

    $default  reduce using rule 62 (elist)


State 149

   67 indexed: indexed ',' indexedelem .

    $default  reduce using rule 67 (indexed)


State 150

   73 block: '{' $@5 temp_st '}' . $@6

    $default  reduce using rule 72 ($@6)

    $@6  go to state 168


State 151

   69 temp_st: temp_st stmt .

    $default  reduce using rule 69 (temp_st)


State 152

   56 call: '(' funcdef ')' '(' . elist ')'

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 169
    objectdef   go to state 34
    const       go to state 37


State 153

   51 member: lvalue '[' expr ']' .

    $default  reduce using rule 51 (member)


State 154

   59 normcall: '(' elist ')' .

    $default  reduce using rule 59 (normcall)


State 155

   60 methodcall: DOUBLE_DOT ID '(' . elist ')'

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 170
    objectdef   go to state 34
    const       go to state 37


State 156

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   40 assignexpr: lvalue $@4 '=' expr .

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83

    $default  reduce using rule 40 (assignexpr)


State 157

   53 member: call '[' expr ']' .

    $default  reduce using rule 53 (member)


State 158

   54 call: call '(' elist ')' .

    $default  reduce using rule 54 (call)


State 159

   93 ifstmt: $@12 ELSE $@13 stmt .

    $default  reduce using rule 93 (ifstmt)


State 160

   62 elist: elist . ',' expr
  105 forstmt: forp N $@19 elist . ')' $@20 N stmt N

    ')'  shift, and go to state 171
    ','  shift, and go to state 109


State 161

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   97 whilestmt: WHILE $@14 '(' $@15 expr . ')' $@16 stmt

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83
    ')'            shift, and go to state 172


State 162

  102 forp: FOR '(' $@17 elist ';' . M expr ';' $@18

    $default  reduce using rule 99 (M)

    M  go to state 173


State 163

   90 ifstmt: IF '(' expr ')' $@11 . stmt

    WHILE        shift, and go to state 1
    FOR          shift, and go to state 2
    BREAK        shift, and go to state 3
    CONTINUE     shift, and go to state 4
    IF           shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    ';'          shift, and go to state 21
    '{'          shift, and go to state 22
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    $default  reduce using rule 91 ($@12)

    stmt        go to state 174
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    $@12        go to state 39
    whilestmt   go to state 40
    forp        go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 164

   76 funcdef: FUNCTION ID $@7 '(' $@8 . idlist ')' block

    ID  shift, and go to state 165

    $default  reduce using rule 88 (idlist)

    idlist  go to state 175


State 165

   86 idlist: ID .

    $default  reduce using rule 86 (idlist)


State 166

   79 funcdef: FUNCTION $@9 '(' $@10 idlist . ')' block
   87 idlist: idlist . ',' ID

    ')'  shift, and go to state 176
    ','  shift, and go to state 177


State 167

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
   68 indexedelem: '{' expr ':' expr . '}'

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83
    '}'            shift, and go to state 178


State 168

   73 block: '{' $@5 temp_st '}' $@6 .

    $default  reduce using rule 73 (block)


State 169

   56 call: '(' funcdef ')' '(' elist . ')'
   62 elist: elist . ',' expr

    ')'  shift, and go to state 179
    ','  shift, and go to state 109


State 170

   60 methodcall: DOUBLE_DOT ID '(' elist . ')'
   62 elist: elist . ',' expr

    ')'  shift, and go to state 180
    ','  shift, and go to state 109


State 171

  105 forstmt: forp N $@19 elist ')' . $@20 N stmt N

    $default  reduce using rule 104 ($@20)

    $@20  go to state 181


State 172

   97 whilestmt: WHILE $@14 '(' $@15 expr ')' . $@16 stmt

    $default  reduce using rule 96 ($@16)

    $@16  go to state 182


State 173

  102 forp: FOR '(' $@17 elist ';' M . expr ';' $@18

    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    expr        go to state 183
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 174

   90 ifstmt: IF '(' expr ')' $@11 stmt .

    $default  reduce using rule 90 (ifstmt)


State 175

   76 funcdef: FUNCTION ID $@7 '(' $@8 idlist . ')' block
   87 idlist: idlist . ',' ID

    ')'  shift, and go to state 184
    ','  shift, and go to state 177


State 176

   79 funcdef: FUNCTION $@9 '(' $@10 idlist ')' . block

    '{'  shift, and go to state 22

    block  go to state 185


State 177

   87 idlist: idlist ',' . ID

    ID  shift, and go to state 186


State 178

   68 indexedelem: '{' expr ':' expr '}' .

    $default  reduce using rule 68 (indexedelem)


State 179

   56 call: '(' funcdef ')' '(' elist ')' .

    $default  reduce using rule 56 (call)


State 180

   60 methodcall: DOUBLE_DOT ID '(' elist ')' .

    $default  reduce using rule 60 (methodcall)


State 181

  105 forstmt: forp N $@19 elist ')' $@20 . N stmt N

    $default  reduce using rule 98 (N)

    N  go to state 187


State 182

   97 whilestmt: WHILE $@14 '(' $@15 expr ')' $@16 . stmt

    WHILE        shift, and go to state 1
    FOR          shift, and go to state 2
    BREAK        shift, and go to state 3
    CONTINUE     shift, and go to state 4
    IF           shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    ';'          shift, and go to state 21
    '{'          shift, and go to state 22
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    $default  reduce using rule 91 ($@12)

    stmt        go to state 188
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    $@12        go to state 39
    whilestmt   go to state 40
    forp        go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 183

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '>' expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . '<' expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUALS expr
   25     | expr . NOT_EQUALS expr
   26     | expr . AND expr
   27     | expr . OR expr
  102 forp: FOR '(' $@17 elist ';' M expr . ';' $@18

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '*'            shift, and go to state 75
    '%'            shift, and go to state 76
    '/'            shift, and go to state 77
    EQUALS         shift, and go to state 78
    NOT_EQUALS     shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS_EQUAL     shift, and go to state 81
    '>'            shift, and go to state 82
    '<'            shift, and go to state 83
    ';'            shift, and go to state 189


State 184

   76 funcdef: FUNCTION ID $@7 '(' $@8 idlist ')' . block

    '{'  shift, and go to state 22

    block  go to state 190


State 185

   79 funcdef: FUNCTION $@9 '(' $@10 idlist ')' block .

    $default  reduce using rule 79 (funcdef)


State 186

   87 idlist: idlist ',' ID .

    $default  reduce using rule 87 (idlist)


State 187

  105 forstmt: forp N $@19 elist ')' $@20 N . stmt N

    WHILE        shift, and go to state 1
    FOR          shift, and go to state 2
    BREAK        shift, and go to state 3
    CONTINUE     shift, and go to state 4
    IF           shift, and go to state 5
    FUNCTION     shift, and go to state 6
    RETURN       shift, and go to state 7
    NOT          shift, and go to state 8
    LOCAL        shift, and go to state 9
    TRUE         shift, and go to state 10
    FALSE        shift, and go to state 11
    NIL          shift, and go to state 12
    '-'          shift, and go to state 13
    PLUS_PLUS    shift, and go to state 14
    MINUS_MINUS  shift, and go to state 15
    ID           shift, and go to state 16
    INTEGER      shift, and go to state 17
    STRING       shift, and go to state 18
    REALNUMBER   shift, and go to state 19
    '['          shift, and go to state 20
    ';'          shift, and go to state 21
    '{'          shift, and go to state 22
    '('          shift, and go to state 23
    GLOB         shift, and go to state 24

    $default  reduce using rule 91 ($@12)

    stmt        go to state 191
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    $@12        go to state 39
    whilestmt   go to state 40
    forp        go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 188

   97 whilestmt: WHILE $@14 '(' $@15 expr ')' $@16 stmt .

    $default  reduce using rule 97 (whilestmt)


State 189

  102 forp: FOR '(' $@17 elist ';' M expr ';' . $@18

    $default  reduce using rule 101 ($@18)

    $@18  go to state 192


State 190

   76 funcdef: FUNCTION ID $@7 '(' $@8 idlist ')' block .

    $default  reduce using rule 76 (funcdef)


State 191

  105 forstmt: forp N $@19 elist ')' $@20 N stmt . N

    $default  reduce using rule 98 (N)

    N  go to state 193


State 192

  102 forp: FOR '(' $@17 elist ';' M expr ';' $@18 .

    $default  reduce using rule 102 (forp)


State 193

  105 forstmt: forp N $@19 elist ')' $@20 N stmt N .

    $default  reduce using rule 105 (forstmt)
